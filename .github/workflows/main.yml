on:
  push:
    branches: ['**']
    tags:
      - '**'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn
      - run: yarn install --frozen-lockfile
      - name: Run type check
        run: yarn tsc:check
      - name: Run eslint
        run: yarn lint
      - name: Run tests
        run: yarn test -- -- --coverage
      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./packages/react-rtc/coverage/coverage-final.json
          flags: react-rtc
      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./packages/signaling-server/coverage/coverage-final.json
          flags: signaling-server

  analyze:
    name: CodeQL
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v3
      - uses: github/codeql-action/init@v2
        with:
          languages: typescript
      - uses: github/codeql-action/analyze@v2

  deploy_preview:
    name: Deploy preview
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/') == false
    environment:
      name: Preview
      url: ${{ steps.deploy.outputs.preview-url }}
    steps:
      - uses: actions/checkout@v3
      - id: deploy
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}

  deploy_production:
    name: Deploy preview
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    environment:
      name: Production
      url: https://react-rtc.vercel.app/
    steps:
      - uses: actions/checkout@v3
      - id: deploy
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
          vercel-args: '--prod'
