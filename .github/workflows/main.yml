on:
  push:
    branches: ['**']
    tags:
      - '**'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v3
        with:
            path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
            key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            restore-keys: ${{ runner.os }}-yarn
      - run: yarn install --frozen-lockfile
      - name: Run type check
        run: yarn tsc:check
      - name: Run eslint
        run: yarn lint

  deploy_preview:
        runs-on: ubuntu-latest
        needs: test
        if: startsWith(github.ref, 'refs/tags/') == false
        environment:
            name: Preview
            url: ${{ steps.deploy.outputs.preview-url }}
        steps:
            - uses: actions/checkout@v3
            - id: deploy
              uses: amondnet/vercel-action@v20
              with:
                  vercel-token: ${{ secrets.VERCEL_TOKEN }}
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
                  vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}

  deploy_production:
        runs-on: ubuntu-latest
        needs: test
        if: startsWith(github.ref, 'refs/tags/')
        environment:
            name: Production
            url: ${{ secrets.PRODUCTION_URL}}
        steps:
            - uses: actions/checkout@v3
            - id: deploy
              uses: amondnet/vercel-action@v20
              with:
                  vercel-token: ${{ secrets.VERCEL_TOKEN }}
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
                  vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
                  vercel-args: '--prod'
